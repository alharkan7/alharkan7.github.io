---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { tweetEmbeds } from "../../data/tweet-shorts.ts";

export async function getStaticPaths() {
  const tweetsPerPage = 5;
  const totalPages = Math.ceil(tweetEmbeds.length / tweetsPerPage);
  
  // Generate paths for pages 2 onwards (page 1 is handled by index.astro)
  return Array.from({ length: totalPages - 1 }, (_, i) => {
    const page = i + 2; // Start from page 2
    const startIndex = (page - 1) * tweetsPerPage;
    return {
      params: { page: String(page) },
      props: {
        tweets: tweetEmbeds.slice(startIndex, startIndex + tweetsPerPage),
        currentPage: page,
        totalPages,
      },
    };
  });
}

const { tweets, currentPage, totalPages } = Astro.props;
const title = "Short Threads - Al Harkan";
const description = "Collection of Short Threads by Al Harkan";
const permalink = `${Astro?.site?.href}short`;
---

<BaseLayout
  title={title}
  description={description}
  permalink={permalink}
  current="shorts"
>
  <div class="container">
    <h1>Collection of Short Threads</h1>
    <p>
      <b
        >Go to my <a
          href="https://x.com/alhrkn"
          target="_blank"
          rel="noopener noreferrer">Highlights</a
        > for more updated list.</b
      >
    </p>
    <small>Open any tweet to read the full threads.</small>

    <div class="tweets-container">
      {tweets.map((embed) => <Fragment set:html={embed} />)}
    </div>

    <div class="pagination">
      <a href={currentPage === 2 ? '/shorts' : `/shorts/${currentPage - 1}`} class="prev-button">← Previous</a>
      <span class="page-info">Page {currentPage} of {totalPages}</span>
      {currentPage < totalPages && (
        <a href={`/shorts/${currentPage + 1}`} class="next-button">Next →</a>
      )}
    </div>
  </div>
</BaseLayout>

<script>
  function loadTwitterWidgets() {
    if (window.twttr) {
      window.twttr.widgets.load();
    } else {
      const script = document.createElement('script');
      script.src = "https://platform.twitter.com/widgets.js";
      script.async = true;
      script.onload = () => {
        if (window.twttr) {
          window.twttr.widgets.load();
        }
      };
      document.head.appendChild(script);
    }
  }

  // Load Twitter widgets on initial page load
  document.addEventListener('DOMContentLoaded', loadTwitterWidgets);
</script>

<style>
  .tweets-container {
    display: grid;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .pagination {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
  }

  .page-info {
    color: var(--text-secondary);
  }

  .prev-button, .next-button {
    padding: 0.5rem 1rem;
    border: 1px solid var(--text-secondary);
    border-radius: 4px;
    text-decoration: none;
    color: var(--text-main);
    transition: all 0.2s ease;
  }

  .prev-button:hover, .next-button:hover {
    background-color: var(--text-main);
    color: var(--background-body);
  }

  .next-button {
    margin-left: auto;
  }

  .prev-button {
    margin-right: auto;
  }
</style>