---
import BaseLayout from "../layouts/BaseLayout.astro";
// Try importing using the '@' alias
import videosData from "../../public/os-bookmarks/liked_videos.json" with { type: "json" };

// Define the expected structure of a video object
interface Video {
    title: string;
    thumbnail_url: string;
    url: string;
    // Add other properties if they exist in your JSON
}

const title = "Videos - Al Harkan";
const description =
    "Videos Curation on AI Research, Software, and Digital Media";
const permalink = Astro.site?.href ? `${Astro.site.href}videos` : "/videos";

// Pagination logic
const urlParams = Astro.url.searchParams;
const validLimits = [30, 60, 90];
let limit = parseInt(urlParams.get("limit") || "30");
if (!validLimits.includes(limit)) {
    limit = 30; // Default to 50 if invalid limit
}
const page = parseInt(urlParams.get("page") || "1");
const totalItems = videosData.length;
const totalPages = Math.ceil(totalItems / limit);
const currentPage = Math.max(1, Math.min(page, totalPages)); // Clamp page number
const offset = (currentPage - 1) * limit;
// Explicitly type the sliced array
const videosToShow: Video[] = videosData.slice(offset, offset + limit);

const hasPrevPage = currentPage > 1;
const hasNextPage = currentPage < totalPages;
const prevPageUrl = hasPrevPage
    ? `?page=${currentPage - 1}&limit=${limit}`
    : "#";
const nextPageUrl = hasNextPage
    ? `?page=${currentPage + 1}&limit=${limit}`
    : "#";
---

<BaseLayout
    title={title}
    description={description}
    permalink={permalink ?? "/"}
    current="bookmarks"
>
    <div class="container">
        <h1>My Liked Videos</h1>
        <p>On AI Research, Software, and Digital Media</p>
        <hr />

        <!-- Video Grid -->
        <div class="video-grid">
            {
                videosToShow.map((video: Video) => (
                    <a
                        href={video.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="video-item"
                        title={video.title}
                    >
                        <img
                            src={video.thumbnail_url}
                            alt={video.title}
                            loading="lazy"
                        />
                        <p class="video-title">{video.title}</p>
                    </a>
                ))
            }
        </div>

        <!-- Pagination Controls -->
        {
            totalItems > 0 && (
                <div class="pagination-controls">
                    <div class="pagination-nav">
                        <a
                            href={prevPageUrl}
                            class:list={["nav-button", { disabled: !hasPrevPage }]}
                            aria-disabled={!hasPrevPage}
                        >
                            &laquo; Prev
                        </a>
                        <span>
                            Page {currentPage} of {totalPages}
                        </span>
                        <a
                            href={nextPageUrl}
                            class:list={["nav-button", { disabled: !hasNextPage }]}
                            aria-disabled={!hasNextPage}
                        >
                            Next &raquo;
                        </a>
                    </div>
                    <div class="pagination-limit">
                        <label for="limit-select">Items per page:</label>
                        <select
                            id="limit-select"
                        >
                            {validLimits.map((l) => (
                                <option value={l} selected={l === limit}>
                                    {l}
                                </option>
                            ))}
                        </select>
                        <span class="total-items">({totalItems} videos total)</span>
                    </div>
                </div>
            )
        }
        <p class="footnote">
            This bookmarks list is automatically updated daily and synced with
            my YouTube account.
        </p>
    </div>
</BaseLayout>

<script>
    const limitSelect = document.getElementById('limit-select');
    if (limitSelect) {
        limitSelect.addEventListener('change', (event) => {
            // In JS, event.target for a change event on a select element
            // should have a 'value' property.
            const target = event.target;
            if (target && 'value' in target) {
              window.location.href = `?page=1&limit=${target.value}`;
            }
        });
    }
</script>

<style>
    /* Style the last paragraph as a footnote */
    p.footnote {
        font-size: 0.85em; /* Smaller font size */
        color: var(--text-secondary, grey); /* Muted color */
        margin-top: 2em; /* Add some space above it */
    }

    .video-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
        margin-bottom: 2rem;
    }

    .video-item {
        display: flex;
        flex-direction: column;
        text-decoration: none;
        color: inherit;
        background-color: var(--bg-secondary, #f9f9f9);
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .video-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
    }

    .video-item img {
        width: 100%;
        height: auto;
        aspect-ratio: 16 / 9; /* Maintain aspect ratio */
        object-fit: cover;
        display: block; /* Remove bottom space */
    }

    .video-title {
        padding: 0.75rem;
        font-size: 0.9em;
        margin: 0;
        line-height: 1.3;
        /* Clamp title to 2 lines */
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        min-height: calc(2 * 1.3em); /* Ensure space for 2 lines */
    }

    .pagination-controls {
        margin-top: 2.5rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        font-size: 0.95em;
        border-top: 1px solid var(--border-color, #eee);
        padding-top: 1.5rem;
    }

    .pagination-nav {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .nav-button {
        padding: 0.5em 1em;
        border: 1px solid var(--border-color, #ddd);
        border-radius: 4px;
        text-decoration: none;
        color: var(--text-link, blue);
        background-color: var(--bg-secondary, #fff);
        transition: background-color 0.2s;
    }

    .nav-button:hover:not(.disabled) {
        background-color: var(--bg-tertiary, #f0f0f0);
    }

    .nav-button.disabled {
        color: var(--text-muted, #aaa);
        pointer-events: none;
        border-color: var(--border-color-muted, #eee);
        background-color: var(--bg-muted, #f9f9f9);
    }

    .pagination-limit {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--text-secondary, grey);
    }

    #limit-select {
        padding: 0.3em 0.5em;
        border-radius: 4px;
        border: 1px solid var(--border-color, #ddd);
    }

    .total-items {
      margin-left: 0.5rem;
      font-style: italic;
    }
</style>
